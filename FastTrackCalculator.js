// Generated by CoffeeScript 1.6.3
(function() {
  var calculator, numbers_string, _;

  _ = require('underscore');

  numbers_string

  calculator = function(input) {
    var largest_product, numbers;
    numbers = input.split(" ");
    largest_product = 0;
    _.each(numbers, function(n, rest) {
      var sum;
      sum = _.reduce(_.take(rest, 4), function(memo, num) {
        return memo + num;
      }, n);
      if (sum > largest_product) {
        return largest_product = sum;
      }
    });
    return largest_product;
  };

  console.log(calculator(numbers_string));

}).call(this);
